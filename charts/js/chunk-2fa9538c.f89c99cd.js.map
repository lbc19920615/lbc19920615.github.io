{"version":3,"sources":["webpack:///./src/pages/threemap.vue?d254","webpack:///./src/pages/threemap.vue?2d84","webpack:///./node_modules/d3-geo/src/math.js","webpack:///./node_modules/d3-geo/src/compose.js","webpack:///./node_modules/d3-geo/src/rotation.js","webpack:///./node_modules/d3-geo/src/noop.js","webpack:///./node_modules/d3-geo/src/clip/buffer.js","webpack:///./node_modules/d3-geo/src/pointEqual.js","webpack:///./node_modules/d3-geo/src/clip/rejoin.js","webpack:///./node_modules/d3-array/src/fsum.js","webpack:///./node_modules/d3-geo/src/cartesian.js","webpack:///./node_modules/d3-geo/src/polygonContains.js","webpack:///./node_modules/d3-array/src/merge.js","webpack:///./node_modules/d3-geo/src/clip/index.js","webpack:///./node_modules/d3-geo/src/clip/antimeridian.js","webpack:///./node_modules/d3-geo/src/circle.js","webpack:///./node_modules/d3-geo/src/clip/circle.js","webpack:///./node_modules/d3-geo/src/clip/line.js","webpack:///./node_modules/d3-geo/src/clip/rectangle.js","webpack:///./node_modules/d3-geo/src/identity.js","webpack:///./node_modules/d3-geo/src/transform.js","webpack:///./node_modules/d3-geo/src/stream.js","webpack:///./node_modules/d3-geo/src/path/bounds.js","webpack:///./node_modules/d3-geo/src/projection/fit.js","webpack:///./node_modules/d3-geo/src/projection/resample.js","webpack:///./node_modules/d3-geo/src/projection/index.js","webpack:///./node_modules/d3-geo/src/projection/mercator.js","webpack:///./src/utils/threemap/helpers.js","webpack:///src/pages/threemap.vue","webpack:///./src/pages/threemap.vue?757f","webpack:///./src/pages/threemap.vue"],"names":["render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","attrs","epsilon","epsilon2","pi","Math","PI","halfPi","quarterPi","tau","degrees","radians","abs","atan","atan2","cos","exp","ceil","log","floor","hypot","sin","pow","sign","x","sqrt","tan","acos","asin","compose","y","a","b","invert","rotationIdentity","lambda","phi","round","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","cosPhi","z","k","forward","coordinates","rotate","length","noop","line","lines","point","m","push","lineStart","lineEnd","rejoin","pop","concat","shift","result","Intersection","points","other","entry","o","e","v","n","p","i","subject","clip","segments","forEach","segment","p0","p1","pointEqual","stream","sort","compareIntersection","startInside","start","current","isSubject","interpolate","array","Adder","_partials","Float64Array","_n","j","hi","lo","cartesian","spherical","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","d","l","longitude","sinPhi","normal","angle","winding","sum","polygon","ring","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","point1","phi1","delta","absDelta","antimeridian","add","arc","intersection","phiArc","flatten","arrays","merge","Array","from","sink","clipLine","ringBuffer","ringSink","polygonStarted","polygonStart","pointRing","ringStart","ringEnd","polygonEnd","polygonContains","sphere","pointVisible","pointLine","clean","ringSegments","filter","validSegment","clipAntimeridianLine","clipAntimeridianInterpolate","NaN","sign0","sign1","clipAntimeridianIntersect","sinLambda0Lambda1","to","direction","circleStream","radius","t0","t1","cosRadius","sinRadius","step","circleRadius","t","cr","smallRadius","notHemisphere","visible","c0","v0","v00","point2","c","code","intersect","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","B","u","w","uu","t2","q","polar","meridian","q1","r","ax","ay","bx","by","dx","dy","x0","x1","y0","y1","clipMax","clipMin","clipRectangle","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","polygonInside","a0","b0","b1","cleanInside","linePoint","max","min","transformer","methods","s","TransformStream","key","streamGeometry","geometry","streamGeometryType","hasOwnProperty","type","prototype","constructor","streamObjectType","Feature","object","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","Infinity","boundsStream","boundsPoint","bounds","fit","projection","fitBounds","clipExtent","scale","translate","fitExtent","extent","h","fitSize","size","fitWidth","width","fitHeight","height","maxDepth","cosMinDistance","delta2","project","resampleNone","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","transformRadians","transformRotate","scaleTranslate","sx","sy","transform","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","postclip","identity","recenter","center","apply","resample","reset","_","arguments","undefined","clipAngle","reflectX","reflectY","precision","mercatorRaw","mercatorProjection","reclip","buildLightSystem","scene","directionalLight","THREE","position","set","target","castShadow","shadow","camera","bias","mapSize","light","window","data","lastTimeStamp","initedShowName","mounted","detectTimeStamp","gutter","console","mixins","intervalMixins","renderer","map","addDatGui","gui","initEnvironment","background","setCamera","canvas","document","querySelector","setPixelRatio","devicePixelRatio","setSize","innerWidth","innerHeight","addEventListener","onDocumentMouseMove","onWindowResize","initMap","china","multiPolygon","color","shape","moveTo","lineTo","linGeometry","vertices","bevelEnabled","transparent","opacity","province","mesh","properties","elem","centroid","_centroid","lookAt","showName","offCanvas","createElement","ctxOffCanvas","getContext","font","strokeStyle","fillStyle","children","name","left","top","measureText","show","texts","text","strokeText","fillText","ctx","drawImage","aspect","updateProjectionMatrix","event","preventDefault","loop","timestamp","requestAnimationFrame","component"],"mappings":"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","file":"js/chunk-2fa9538c.f89c99cd.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/@vue/cli-plugin-typescript/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./threemap.vue?vue&type=style&index=0&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page-threemap\"},[_c('canvas',{staticClass:\"canvas\",attrs:{\"id\":\"canvas\"}}),_c('canvas',{staticClass:\"canvas\",attrs:{\"id\":\"name\"}})])}]\n\nexport { render, staticRenderFns }","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","export default function noop() {}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi)\n    return point[0];\n  else\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default x => x;\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import * as THREE from 'three'\r\n\r\n/**\r\n * 构建通用光照系统\r\n **/\r\nexport function buildLightSystem(scene) {\r\n  let directionalLight = new THREE.DirectionalLight(0xffffff, 1.1);\r\n  directionalLight.position.set(300, 1000, 500);\r\n  directionalLight.target.position.set(0, 0, 0);\r\n  directionalLight.castShadow = true;\r\n\r\n  let d = 300;\r\n  directionalLight.shadow.camera = new THREE.OrthographicCamera(-d, d, d, -d, 500, 1600);\r\n  directionalLight.shadow.bias = 0.0001;\r\n  directionalLight.shadow.mapSize.width = directionalLight.shadow.mapSize.height = 1024;\r\n  scene.add(directionalLight)\r\n\r\n  let light = new THREE.AmbientLight(0xffffff, 0.6)\r\n  scene.add(light)\r\n\r\n}\r\n\r\n/**\r\n * 构建通用辅助系统: 网格和坐标\r\n **/\r\nexport function buildAuxSystem(scene) {\r\n  // 坐标系统\r\n  let axisHelper = new THREE.AxesHelper(2000)\r\n  scene.add(axisHelper)\r\n\r\n  // 网格辅助\r\n  let gridHelper = new THREE.GridHelper(60, 60)\r\n  scene.add(gridHelper)\r\n}\r\n","<style lang=\"scss\">\r\n.page-threemap {\r\n  // margin: 20px 0;\r\n  position: absolute;\r\n  text-align: center;\r\n  /*opacity: 0.2;*/\r\n  width: 100%;\r\n  .canvas {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  #name {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    pointer-events: none;\r\n  }\r\n}\r\n</style>\r\n\r\n<template>\r\n  <div class=\"page-threemap\">\r\n    <canvas class=\"canvas\" id=\"canvas\" />\r\n    <canvas class=\"canvas\" id=\"name\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport chinaJson from \"@/utils/threemap/china.json\";\r\nimport * as d3geo from \"d3-geo\";\r\nimport { buildLightSystem, buildAuxSystem } from \"@/utils/threemap/helpers\";\r\nimport * as THREE from \"three\";\r\n// import { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport * as dat from \"dat.gui\";\r\n\r\nwindow.THREE = THREE;\r\n\r\nlet offCanvas;\r\nlet ctxOffCanvas;\r\n\r\nlet intervalMixins = {\r\n  data() {\r\n    return {\r\n      lastTimeStamp: 10,\r\n      initedShowName: false,\r\n    };\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    detectTimeStamp(v, gutter = 1000) {\r\n      if (typeof this.lastTimeStamp === \"undefined\" && v) {\r\n        this.lastTimeStamp = v;\r\n      }\r\n      // console.log(this.lastTimeStamp, typeof this.lastTimeStamp , v)\r\n      if (v > this.lastTimeStamp + gutter) {\r\n        console.log(\"detectTimeStamps\");\r\n        this.lastTimeStamp = v;\r\n        if (!this.initedShowName) {\r\n          this.initedShowName = true;\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n\r\nexport default {\r\n  mixins: [intervalMixins],\r\n  data() {\r\n    return {\r\n      scene: null, // 场景\r\n      camera: null, // 摄像机\r\n      renderer: null, // 渲染器\r\n      map: null, // 地图容器\r\n    };\r\n  },\r\n  methods: {\r\n    addDatGui() {\r\n      const gui = new dat.GUI();\r\n      let camera = this.camera;\r\n      gui.add(camera.position, \"x\", -100, 100).step(1);\r\n      gui.add(camera.position, \"y\", -100, 100).step(1);\r\n      gui.add(camera.position, \"z\", -100, 100).step(1);\r\n    },\r\n    // 初始化3D环境\r\n    initEnvironment() {\r\n      this.scene = new THREE.Scene();\r\n      this.scene.background = new THREE.Color(0xf0f0f0);\r\n      // 建一个空对象存放对象\r\n      this.map = new THREE.Object3D();\r\n      // 设置相机参数\r\n      this.setCamera();\r\n      // 初始化\r\n      this.renderer = new THREE.WebGLRenderer({\r\n        alpha: true,\r\n        canvas: document.querySelector(\"canvas\"),\r\n      });\r\n      this.renderer.setPixelRatio(window.devicePixelRatio);\r\n      this.renderer.setSize(window.innerWidth, window.innerHeight - 10);\r\n      document.addEventListener(\"mousemove\", this.onDocumentMouseMove, false);\r\n      window.addEventListener(\"resize\", this.onWindowResize, false);\r\n    },\r\n    initMap() {\r\n      // console.log('json', chinaJson)\r\n      // d3-geo转化坐标\r\n      const projection = d3geo\r\n        .geoMercator()\r\n        .center([104.0, 37.5])\r\n        .scale(80)\r\n        .translate([0, 0]);\r\n      // 遍历省份构建模型\r\n      chinaJson.features.forEach((elem) => {\r\n        // 新建一个省份容器：用来存放省份对应的模型和轮廓线\r\n        const province = new THREE.Object3D();\r\n        const coordinates = elem.geometry.coordinates;\r\n        coordinates.forEach((multiPolygon) => {\r\n          multiPolygon.forEach((polygon) => {\r\n            // 这里的坐标要做2次使用：1次用来构建模型，1次用来构建轮廓线\r\n            const shape = new THREE.Shape();\r\n            const lineMaterial = new THREE.LineBasicMaterial({\r\n              color: 0xffffff,\r\n            });\r\n            const linGeometry = new THREE.Geometry();\r\n            for (let i = 0; i < polygon.length; i++) {\r\n              const [x, y] = projection(polygon[i]);\r\n              if (i === 0) {\r\n                shape.moveTo(x, -y);\r\n              }\r\n              shape.lineTo(x, -y);\r\n              linGeometry.vertices.push(new THREE.Vector3(x, -y, 4.01));\r\n            }\r\n            const extrudeSettings = {\r\n              depth: 4,\r\n              bevelEnabled: false,\r\n            };\r\n            const geometry = new THREE.ExtrudeGeometry(shape, extrudeSettings);\r\n            const material = new THREE.MeshBasicMaterial({\r\n              color: \"#d13a34\",\r\n              transparent: true,\r\n              opacity: 0.6,\r\n            });\r\n            const mesh = new THREE.Mesh(geometry, material);\r\n            const line = new THREE.Line(linGeometry, lineMaterial);\r\n            province.add(mesh);\r\n            province.add(line);\r\n          });\r\n        });\r\n        // 将geojson的properties放到模型中，后面会用到\r\n        province.properties = elem.properties;\r\n        if (elem.properties.centroid) {\r\n          const [x, y] = projection(elem.properties.centroid);\r\n          province.properties._centroid = [x, y];\r\n        }\r\n        this.map.add(province);\r\n      });\r\n      this.scene.add(this.map);\r\n    },\r\n    setCamera() {\r\n      this.camera = new THREE.PerspectiveCamera(\r\n        35,\r\n        window.innerWidth / window.innerHeight,\r\n        1,\r\n        10000\r\n      );\r\n      this.camera.position.set(0, -70, 90);\r\n      this.camera.lookAt(0, 0, 0);\r\n    },\r\n    // 显示名称\r\n    showName() {\r\n      const width = window.innerWidth;\r\n      const height = window.innerHeight;\r\n      let canvas = document.querySelector(\"#name\");\r\n      if (!canvas) return;\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      // 新建一个离屏canvas\r\n      offCanvas = document.createElement(\"canvas\");\r\n      offCanvas.width = width;\r\n      offCanvas.height = height;\r\n      ctxOffCanvas = offCanvas.getContext(\"2d\");\r\n      // 设置canvas字体样式\r\n      ctxOffCanvas.font = \"16.5px Arial\";\r\n      ctxOffCanvas.strokeStyle = \"#FFFFFF\";\r\n      ctxOffCanvas.fillStyle = \"#000000\";\r\n      // console.log(offCanvas)\r\n      // texts用来存储显示的名称，重叠的部分就不会放到里面\r\n      const texts = [];\r\n      /**\r\n       * 遍历省份数据，有2个核心功能\r\n       * 1. 将3维坐标转化成2维坐标\r\n       * 2. 后面遍历到的数据，要和前面的数据做碰撞对比，重叠的就不绘制\r\n       * */\r\n      this.map.children.forEach((elem, index) => {\r\n        if (!elem.properties._centroid) return;\r\n        // 找到中心点\r\n        const y = -elem.properties._centroid[1];\r\n        const x = elem.properties._centroid[0];\r\n        const z = 4;\r\n        // 转化为二维坐标\r\n        const vector = new THREE.Vector3(x, y, z);\r\n        const position = vector.project(this.camera);\r\n        // 构建文本的基本属性：名称，left, top, width, height -> 碰撞对比需要这些坐标数据\r\n        const name = elem.properties.name;\r\n        const left = ((vector.x + 1) / 2) * width;\r\n        const top = (-(vector.y - 1) / 2) * height;\r\n        const text = {\r\n          name,\r\n          left,\r\n          top,\r\n          width: ctxOffCanvas.measureText(name).width,\r\n          height: 16.5,\r\n        };\r\n        // 碰撞对比\r\n        let show = true;\r\n        for (let i = 0; i < texts.length; i++) {\r\n          if (\r\n            text.left + text.width < texts[i].left ||\r\n            text.top + text.height < texts[i].top ||\r\n            texts[i].left + texts[i].width < text.left ||\r\n            texts[i].top + texts[i].height < text.top\r\n          ) {\r\n            show = true;\r\n          } else {\r\n            show = false;\r\n            break;\r\n          }\r\n        }\r\n        if (show) {\r\n          texts.push(text);\r\n          ctxOffCanvas.strokeText(name, left, top);\r\n          ctxOffCanvas.fillText(name, left, top);\r\n        }\r\n      });\r\n      // 离屏canvas绘制到canvas中\r\n      ctx.drawImage(offCanvas, 0, 0);\r\n    },\r\n    // 根据浏览器窗口变化动态更新尺寸\r\n    onWindowResize() {\r\n      this.camera.aspect = window.innerWidth / window.innerHeight;\r\n      this.camera.updateProjectionMatrix();\r\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    },\r\n    onDocumentMouseMove(event) {\r\n      event.preventDefault();\r\n    },\r\n    // 动画循环\r\n    loop(timestamp) {\r\n      this.detectTimeStamp(timestamp);\r\n      if (this.initedShowName) {\r\n        this.initedShowName = false;\r\n        this.showName();\r\n      }\r\n      this.render();\r\n      requestAnimationFrame(this.loop);\r\n    },\r\n    // 渲染画布\r\n    render() {\r\n      this.renderer.render(this.scene, this.camera);\r\n    },\r\n  },\r\n  mounted() {\r\n    // 初始化3D环境\r\n    this.initEnvironment();\r\n    // tigon debug\r\n    this.addDatGui();\r\n    // 构建光照系统\r\n    buildLightSystem(this.scene);\r\n    // 构建辅助系统\r\n    // buildAuxSystem(this.scene)\r\n    // let controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n    // controls.enableDamping = true\r\n    // controls.dampingFactor = 0.25\r\n    // controls.rotateSpeed = 0.35\r\n    this.initMap();\r\n\r\n    this.loop();\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/@vue/cli-plugin-typescript/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./threemap.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@vue/cli-plugin-typescript/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./threemap.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./threemap.vue?vue&type=template&id=9050c586&\"\nimport script from \"./threemap.vue?vue&type=script&lang=js&\"\nexport * from \"./threemap.vue?vue&type=script&lang=js&\"\nimport style0 from \"./threemap.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}