<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sub</title>
    <style>
        html {
            height: 100%;
        }

        body {
            height: 100%;
            margin: 0;
        }

        #routerroot {
            overflow: auto;
        }

        #nav {
            position: sticky;
            top: 0;
        }
    </style>
    <%- links %>
        <script type="importmap">
        {
          "imports": <%- importmap %>
        }
    </script>
        <script type="module">
            function parseRpx(css = '', winWidth = window.innerWidth) {
                let parsedcss = css;

                if (winWidth > 768) {
                    parsedcss = css.replace(/(\d+)(?=rpx)rpx/g, function (pxs, ...pxargs) {
                        return pxs.replace('rpx', 'px')
                    });
                }
                else {
                    parsedcss = css.replace(/(\d+)(?=rpx)rpx/g, function (pxs, ...pxargs) {
                        let val = pxargs[0]
                        return pxs.replace('rpx', 'px').replace(val, val / 750 * winWidth)
                    })
                }
                return parsedcss;
            }
            window.CSS.parseRpx = parseRpx;
            async function importCss(url) {
                const cssFile = await fetch(url);
                const css = await cssFile.text();

                let parsedcss = parseRpx(css);
                // console.log(parsedcss);
                const myStyleSheet = new CSSStyleSheet();
                myStyleSheet.replace(parsedcss);
                return { myStyleSheet, parsedcss };
            }
            window.importCss = importCss;

            let cssFileName = '<%= APP_CSS_PATH %>';
            let { myStyleSheet } = await importCss(cssFileName);
            document.adoptedStyleSheets.push(myStyleSheet);

            // const cssModule = await import(cssFileName, {
            //     assert: { type: 'css' }
            // });
            // document.adoptedStyleSheets = [cssModule.default];


            let name = location.hash.slice(2);
            window.self = window.parent;
            globalThis.VueDemi = self.VueDemi;
            // import { createStyleSheet } from '/assets/wle-router.js?v=0.1.0';


            let curPageCtx = null;
            let curParams = null;

            window.addEventListener("message", function (e) {
                if (e.origin === location.origin) {
                    let data = e.data;
                    if (data.type === "__page-params") {
                        curParams = data.data;
                        // console.log('curPageCtx', curPageCtx);
                    }
                }
            })


            import('/assets/wle-router.js?v=0.1.0').then(m => {
                m.createStyleSheet(name);

                self.wRoute.loadSubPage({
                    nid: 'sub', routerName: name,
                    reRender(innerEle) {
                        document.getElementById('routerroot').appendChild(innerEle)
                    },
                    onEnd(pageCtx) {
                        curPageCtx = pageCtx;
                        if (curPageCtx?.lifeTimes?.onReady) {
                            curPageCtx.lifeTimes.onReady()
                        }
                        // console.log(self.__conditionMap__);
                        // console.log('routerName load end', curPageCtx, curParams);
                    }
                });
            });

        // console.log(globalThis, window, self);

        </script>
</head>

<body>
    <div id="routerroot" class="h-full"></div>
</body>

</html>